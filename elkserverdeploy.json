{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    
   "location": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "Location of resources"
      }
    },

    "elkvmName": {
       "type": "string",
       "metadata": {
          "description": "Name for your ELK Server Virtual Machine"
      }
    },

    "clientvmName": {
       "type": "string",
       "metadata": {
          "description": "Name for your Client Virtual Machine"
       }
    },

    "elkadminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for VM"
      }
    },

    "elkadminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for VM"
      }
    },

    "clientadminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for VM"
      }
    },

    "clientadminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for VM"
      }
    },

   

    "storageAccountType": {
                "type": "string",
                "allowedValues": [
                    "Standard_LRS",
                    "Standard_GRS",
                    "Standard_RAGRS",
                    "Premium_LRS"
                ],
                "metadata": {
                    "description": "The type of the Storage Account created"
                },
                "defaultValue": "Standard_LRS"
            }
  },


  "variables": {
    "elkimagePublisher": "Canonical",
    "elkimageOffer": "UbuntuServer",
    "elkubuntuOSVersion": "14.04.4-LTS",
    "elkOSDiskName": "osdiskforelksimple",
    "elkazureVMUtilsName": "vmCustomizationServerExt",
    "elkazureVMUtilsScriptUrl": "https://raw.githubusercontent.com/SysSudharsan/ELK/master/elk2machine.sh",
    "elknsgName": "elkNSG",
    "elknicName": "elkNic",
    "elkaddressPrefix": "10.5.0.0/16",
    "elksubnetName": "elksubnet",
    "elksubnetPrefix": "10.5.0.0/24",
    "elkpublicIPAddressName": "elkPublicIP",
    "elkpublicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "elkvmSize": "Standard_DS1",
    "storageAccountType": "Standard_LRS",
    "newStorageAccountName": "[concat(uniqueString(resourceGroup().id),'elk')]",
    "elkvirtualNetworkName": "elk_vnet",
    "elkvnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('elkvirtualNetworkName'))]",
    "elknsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('elknsgName'))]",
    "elksubnetRef": "[concat(variables('elkvnetID'),'/subnets/',variables('elksubnetName'))]",
    "elkdnsNameForPublicIP":"[concat('dns',uniqueString(resourceGroup().id),'elk')]",
    "elkosDiskVhdName": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('elkvmName'),uniqueString(resourceGroup().id),'osDisk.vhd')]",

    
    "clientimagePublisher": "Canonical",
    "clientimageOffer": "UbuntuServer",
    "clientubuntuOSVersion": "14.04.4-LTS",
    "clientOSDiskName": "osdiskforclientsimple",
    "clientazureVMUtilsScriptUrl": "https://raw.githubusercontent.com/SysSudharsan/ELK/master/elkclientinstall.sh",
    "clientazureVMUtilsName": "vmCustomizationClientExt",
    "dockerExtensionName": "DockerExtension",
    "clientnsgName": "clientNSG",
    "clientnicName": "clientNic",
    "clientpublicIPAddressName": "clientPublicIP",
    "clientpublicIPAddressType": "Dynamic",
    "clientvmSize": "Standard_DS1",
    "clientnsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('clientnsgName'))]",
    "clientdnsNameForPublicIP":"[concat('dns',uniqueString(resourceGroup().id),'client')]",
    "clientosDiskVhdName": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('clientvmName'),uniqueString(resourceGroup().id),'osDisk.vhd')]"
  },

  "resources": [
     {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('elkpublicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('elkpublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('elkdnsNameForPublicIP')]"
        }
      }
    },
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('clientpublicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('clientpublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('clientdnsNameForPublicIP')]"
        }
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('elkvirtualNetworkName')]",
      "location": "[parameters('location')]",
      
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('elkaddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('elksubnetName')]",
            "properties": {
              "addressPrefix": "[variables('elksubnetPrefix')]"
            }
            }
          
          
        ]
      }
    },

  

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('elknicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('elkpublicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('elkvirtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('elknsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('elkpublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('elksubnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('elknsgName'))]"
                }
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('clientnicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('clientpublicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('elkvirtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('clientnsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('clientpublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('elksubnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clientnsgName'))]"
                }
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('elknsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "kibana",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5601",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "logstash",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5044",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1200,
                            "direction": "Inbound"
                        }
                    },
                     {
                        "name": "open",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1300,
                            "direction": "Inbound"
                        }
                    },
                    {
                      
                        "name": "elasticsearch",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9200",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1400,
                            "direction": "Inbound"  
                        }
                    }
                    ]
                  }
    },

    {
      "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('clientnsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                     {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "httpd",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound"
                        }
                    },

                     {
                        "name": "httpd1",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1200,
                            "direction": "Inbound"
                        }
                    },

                   {
                        "name": "open",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1300,
                            "direction": "Inbound"
                        }
                    },


                {
                  "name": "filebeat",
                  "properties": {
                       "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5044",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1400,
                            "direction": "Inbound"

                  }
                }  
                ]
             }   
    },        

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('elkvmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
              "[concat('Microsoft.Network/networkInterfaces/', variables('elknicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('elkvmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('elkvmName')]",
          "adminUsername": "[parameters('elkadminUsername')]",
          "adminPassword": "[parameters('elkadminPassword')]"
        },
        "storageProfile": {
            "imageReference": {
               "publisher": "[variables('elkimagePublisher')]",
                "offer": "[variables('elkimageOffer')]",
                "sku" : "[variables('elkubuntuOSVersion')]",
                "version":"latest"
                
            },
          "osDisk": {
            "name": "[concat(parameters('elkvmName'),'osDisk')]",
            "vhd": {
                    "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('elkOSDiskName'),'.vhd')]"
                        },
            "caching": "ReadWrite",
            "createOption": "FromImage"
            
            
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('elknicName'))]"
            }
          ]
        }
      }
    },



    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('clientvmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('clientnicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('clientvmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('clientvmName')]",
          "adminUsername": "[parameters('clientadminUsername')]",
          "adminPassword": "[parameters('clientadminPassword')]"
        },
        "storageProfile": {
              "imageReference": {
               "publisher": "[variables('clientimagePublisher')]",
                "offer": "[variables('clientimageOffer')]",
                "sku" : "[variables('clientubuntuOSVersion')]",
                "version": "latest"
                
            },
          "osDisk": {
            "name": "[concat(parameters('clientvmName'),'osDisk')]",
            "vhd": {
                    "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('clientOSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
           
            
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('clientnicName'))]"
            }
          ]
        }
      }
    },
     {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('elkvmName'),'/', variables('elkazureVMUtilsName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('elkvmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                    "fileUris": [
                        "[variables('elkazureVMUtilsScriptUrl')]"
                    ],
                    "commandToExecute": "sh elk2machine.sh"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('clientvmName'),'/', variables('clientazureVMUtilsName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('clientvmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                    "fileUris": [
                        "[variables('clientazureVMUtilsScriptUrl')]"
                    ],
                    "commandToExecute": "sh elkclientinstall.sh"
                }
            }
        },
         {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('clientvmName'),'/', variables('dockerExtensionName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('clientvmName'),'/','extensions/',variables('clientazureVMUtilsName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "DockerExtension",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "compose": {
                        "httpd": {
                            "image": "httpd",
                            "ports": ["80:80"]
                            
                        }
                    }
                }
            }
        }       
  ],

  "outputs": {
    
    "ELK Machine Access URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('elkpublicIPAddressName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]"
  },
    "ELK Login": {
      "type": "string",
      "value": "[parameters('elkadminUsername')]"
    },
    "ELK Password": {
      "type": "string",
      "value": "[parameters('elkadminPassword')]"
    },
    
    "Client Machine Access URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('clientpublicIPAddressName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]"
  },
    "Client Login": {
      "type": "string",
      "value": "[parameters('clientadminUsername')]"
    },
    "Client Password": {
      "type": "string",
      "value": "[parameters('clientadminPassword')]"
    },

    "Kibana url": {
      "type": "string",
      "value":"[concat('http://', variables('elkdnsNameForPublicIP'),'.westus.cloudapp.azure.com')]"
 }

    


    
 }
}
